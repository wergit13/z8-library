import org.zenframework.z8.base.form.action.Action;
import org.zenframework.z8.base.application.Application;
import org.zenframework.z8.base.form.action.ActionType;
import org.zenframework.z8.base.table.system.UserRoles;
import library.model.LibraryUser;
import org.zenframework.z8.base.table.value.Field;
import library.model.LibraryRoles;
import library.runtime.Setup;
import org.zenframework.z8.lang.Object;
import org.zenframework.z8.base.table.value.JoinType;
import org.zenframework.z8.base.table.value.Join;

[displayName "Библиотекари"]
class Librarians extends LibraryUser {
    [displayName "Сбросить пароль"]
	Action resetPassword;
	resetPassword.type = ActionType.Primary;

    [displayName "Библиотека"] library.name;

	UserRoles roles;

    public Join librarianJoin = class {
        virtual protected sql_bool expression(){
            return container.recordId == (sql_guid) container.roles.user && container.roles.role == LibraryRoles.Librarian; 
        }
    };
    librarianJoin = roles;

	virtual protected sql_bool where() {
		return !roles.recordId.sqlIsNull();
	}
	
	controls = { name,
				 changePassword,
				 resetPassword,
				 
				 lastName,
				 firstName,
				 middleName,
                 library.name    
                };
				 
	sortFields = { name };
	names = { name, lastName };
	quickFilters = { name, lastName };

    virtual protected void afterCreate(guid recordId) {
		super.afterCreate(recordId);

        if(hasRecord(recordId))
            throw "Записи не существует";

        Setup setup;
        LibrarianDesktop librarianDesktop;
        
        setup.addRoles(guid[]{ LibraryRoles.Librarian }, recordId);
        setup.addEntries( int[Object]{(librarianDesktop, 1)}, recordId);
	}
}